
if versioncmp($::puppetversion,'3.6.1') >= 0 {
  $allow_virtual_packages = hiera('allow_virtual_packages',false)
  Package {
    allow_virtual => $allow_virtual_packages,
  }
}

Exec {
	path => ['/usr/local/bin','/usr/bin','/usr/local/sbin','/usr/sbin']
}

File {
	owner => root,
	group => root,
}

# package { [ 'git.x86_64' ]: ensure=>ensure, }
file { '/etc/yum.repos.d/mongodb.repo':
  ensure  => 'file',
  mode    => '644',
  content => "[mongodb]
name=MongoDB Repository
baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/
gpgcheck=0
enabled=1",
}

# augeas { 'yum_mongodb_repo':
#     context => '/etc/yum.repos.d/mongodb.repo',
#     changes => [
#       "set /files/etc/yum.repos.d/mongodb.repo/mongodb/name = 'MongoDB Repository'",
#       "set /files/etc/yum.repos.d/mongodb.repo/mongodb/baseurl = 'http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/'",
#       "set /files/etc/yum.repos.d/mongodb.repo/mongodb/gpgcheck = '0'",
#       "set /files/etc/yum.repos.d/mongodb.repo/mongodb/enabled = '1'",
#     ],
#     require => [ File['/etc/yum.repos.d/mongodb.repo'] ],
# }

package { 'mongodb-org':
 	ensure => present,
  require => [ File['/etc/yum.repos.d/mongodb.repo'] ],
}

# crete the group mongodb
group { 'mongodb':
  ensure => 'present',
  gid    => '1001',
}

# crete the user mongodb
user { 'mongodb':
  ensure           => 'present',
  managehome 	     => true,
  gid              => '1001',
  home             => '/home/mongodb',
  password         => '$6$nD4vMHXv$xlQYJuXUwZ.U0mD/6XmcuC6JmfQAj7hN759SuSMue2I6fePPXbzQChJDhRA3XAyO3YNS9SL50ul0ru/G.PWGE.',
  password_max_age => '99999',
  password_min_age => '0',
  shell            => '/bin/bash',
  uid              => '1001',
  purge_ssh_keys   => true,
  require 		     => [ Group['mongodb'] ],
}

# Note to self: This is a wideopen configuration
# -------------------------------------
# iptables -F
# iptables -X
# iptables -t nat -F
# iptables -t nat -X
# iptables -t mangle -F
# iptables -t mangle -X
# iptables -P INPUT ACCEPT
# iptables -P FORWARD ACCEPT
# iptables -P OUTPUT ACCEPT
# -------------------------------------
file { '/etc/sysconfig/iptables':
  ensure   => 'file',
  mode     => '600',
  notify   => [ Service[ 'iptables' ] ],
  content  => "# Generated by puppet
# Generated by iptables-save v1.4.21 on Mon Oct 20 22:58:18 2014
*nat
:PREROUTING ACCEPT [3:612]
:INPUT ACCEPT [3:612]
:OUTPUT ACCEPT [2:152]
:POSTROUTING ACCEPT [2:152]
:OUTPUT_direct - [0:0]
:POSTROUTING_ZONES - [0:0]
:POSTROUTING_ZONES_SOURCE - [0:0]
:POSTROUTING_direct - [0:0]
:POST_public - [0:0]
:POST_public_allow - [0:0]
:POST_public_deny - [0:0]
:POST_public_log - [0:0]
:PREROUTING_ZONES - [0:0]
:PREROUTING_ZONES_SOURCE - [0:0]
:PREROUTING_direct - [0:0]
:PRE_public - [0:0]
:PRE_public_allow - [0:0]
:PRE_public_deny - [0:0]
:PRE_public_log - [0:0]
-A PREROUTING -j PREROUTING_direct
-A PREROUTING -j PREROUTING_ZONES_SOURCE
-A PREROUTING -j PREROUTING_ZONES
-A OUTPUT -j OUTPUT_direct
-A POSTROUTING -s 192.168.122.0/24 ! -d 192.168.122.0/24 -p tcp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 192.168.122.0/24 ! -d 192.168.122.0/24 -p udp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 192.168.122.0/24 ! -d 192.168.122.0/24 -j MASQUERADE
-A POSTROUTING -j POSTROUTING_direct
-A POSTROUTING -j POSTROUTING_ZONES_SOURCE
-A POSTROUTING -j POSTROUTING_ZONES
-A POSTROUTING_ZONES -o enp0s8 -g POST_public
-A POSTROUTING_ZONES -o enp0s3 -g POST_public
-A POSTROUTING_ZONES -g POST_public
-A POST_public -j POST_public_log
-A POST_public -j POST_public_deny
-A POST_public -j POST_public_allow
-A PREROUTING_ZONES -i enp0s8 -g PRE_public
-A PREROUTING_ZONES -i enp0s3 -g PRE_public
-A PREROUTING_ZONES -g PRE_public
-A PRE_public -j PRE_public_log
-A PRE_public -j PRE_public_deny
-A PRE_public -j PRE_public_allow
COMMIT
# Completed on Mon Oct 20 22:58:18 2014
# Generated by iptables-save v1.4.21 on Mon Oct 20 22:58:18 2014
*mangle
:PREROUTING ACCEPT [224:13316]
:INPUT ACCEPT [224:13316]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [121:9412]
:POSTROUTING ACCEPT [121:9412]
:FORWARD_direct - [0:0]
:INPUT_direct - [0:0]
:OUTPUT_direct - [0:0]
:POSTROUTING_direct - [0:0]
:PREROUTING_ZONES - [0:0]
:PREROUTING_ZONES_SOURCE - [0:0]
:PREROUTING_direct - [0:0]
:PRE_public - [0:0]
:PRE_public_allow - [0:0]
:PRE_public_deny - [0:0]
:PRE_public_log - [0:0]
-A PREROUTING -j PREROUTING_direct
-A PREROUTING -j PREROUTING_ZONES_SOURCE
-A PREROUTING -j PREROUTING_ZONES
-A INPUT -j INPUT_direct
-A FORWARD -j FORWARD_direct
-A OUTPUT -j OUTPUT_direct
-A POSTROUTING -o virbr0 -p udp -m udp --dport 68 -j CHECKSUM --checksum-fill
-A POSTROUTING -j POSTROUTING_direct
-A PREROUTING_ZONES -i enp0s8 -g PRE_public
-A PREROUTING_ZONES -i enp0s3 -g PRE_public
-A PREROUTING_ZONES -g PRE_public
-A PRE_public -j PRE_public_log
-A PRE_public -j PRE_public_deny
-A PRE_public -j PRE_public_allow
COMMIT
# Completed on Mon Oct 20 22:58:18 2014
# Generated by iptables-save v1.4.21 on Mon Oct 20 22:58:18 2014
*security
:INPUT ACCEPT [224:13316]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [121:9412]
:FORWARD_direct - [0:0]
:INPUT_direct - [0:0]
:OUTPUT_direct - [0:0]
-A INPUT -j INPUT_direct
-A FORWARD -j FORWARD_direct
-A OUTPUT -j OUTPUT_direct
COMMIT
# Completed on Mon Oct 20 22:58:18 2014
# Generated by iptables-save v1.4.21 on Mon Oct 20 22:58:18 2014
*raw
:PREROUTING ACCEPT [224:13316]
:OUTPUT ACCEPT [121:9412]
:OUTPUT_direct - [0:0]
:PREROUTING_direct - [0:0]
-A PREROUTING -j PREROUTING_direct
-A OUTPUT -j OUTPUT_direct
COMMIT
# Completed on Mon Oct 20 22:58:18 2014
# Generated by iptables-save v1.4.21 on Mon Oct 20 22:58:18 2014
*filter
:INPUT ACCEPT [224:13316]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [121:9412]
:FORWARD_IN_ZONES - [0:0]
:FORWARD_IN_ZONES_SOURCE - [0:0]
:FORWARD_OUT_ZONES - [0:0]
:FORWARD_OUT_ZONES_SOURCE - [0:0]
:FORWARD_direct - [0:0]
:FWDI_public - [0:0]
:FWDI_public_allow - [0:0]
:FWDI_public_deny - [0:0]
:FWDI_public_log - [0:0]
:FWDO_public - [0:0]
:FWDO_public_allow - [0:0]
:FWDO_public_deny - [0:0]
:FWDO_public_log - [0:0]
:INPUT_ZONES - [0:0]
:INPUT_ZONES_SOURCE - [0:0]
:INPUT_direct - [0:0]
:IN_public - [0:0]
:IN_public_allow - [0:0]
:IN_public_deny - [0:0]
:IN_public_log - [0:0]
:OUTPUT_direct - [0:0]
COMMIT
# Completed on Mon Oct 20 22:58:18 2014",
}

service { 'iptables':
  ensure => running,
}

file { '/etc/mongod.conf':
  ensure  => 'file',
  mode    => '644',
  content => "# Generated by puppet

# where to log
logpath=/var/log/mongodb/mongod.log

logappend=true

# fork and run in background
fork=true

port=27017

dbpath=/var/lib/mongo

# location of pidfile
pidfilepath=/var/run/mongodb/mongod.pid

# Listen to local interface only. Comment out to listen on all interfaces.
# bind_ip=127.0.0.1

# Disables write-ahead journaling
# nojournal=true

# Enables periodic logging of CPU utilization and I/O wait
cpu=true

# Turn on/off security.  Off is currently the default
#noauth=true
#auth=true

# Verbose logging output.
#verbose=true

# Inspect all client data for validity on receipt (useful for
# developing drivers)
#objcheck=true

# Enable db quota management
#quota=true

# Set oplogging level where n is
#   0=off (default)
#   1=W
#   2=R
#   3=both
#   7=W+some reads
#diaglog=0

# Ignore query hints
#nohints=true

# Enable the HTTP interface (Defaults to port 28017).
#httpinterface=true

# Turns off server-side scripting.  This will result in greatly limited
# functionality
#noscripting=true

# Turns off table scans.  Any query that would do a table scan fails.
#notablescan=true

# Disable data file preallocation.
#noprealloc=true

# Specify .ns file size for new databases.
# nssize=<size>

# Replication Options

# in replicated mongo databases, specify the replica set name here
#replSet=setname
# maximum size in megabytes for replication operation log
#oplogSize=1024
# path to a key file storing authentication info for connections
# between replica set members
#keyFile=/path/to/keyfile
",
}

# create the home directory for mongodb
file { '/home/mongodb':
	ensure  => 'directory',
	group   => 'mongodb',
	owner   => 'mongodb',
	mode    => '755',
	require => [ Group['mongodb'], User['mongodb'] ],
}

# Add hosts to the /etc/host file ##
augeas { 'etc_hosts':
  context => '/etc/hosts',
  changes => [
    "set /files/etc/hosts/1/ipaddr 127.0.0.1",
    "set /files/etc/hosts/1/canonical localhost",
    "set /files/etc/hosts/1/alias localhost.localdomain",
    "set /files/etc/hosts/2/ipaddr ::1",
    "set /files/etc/hosts/2/canonical localhost",
    "set /files/etc/hosts/2/alias ipv6-loopback",
    "set /files/etc/hosts/3/ipaddr 192.168.33.10",
    "set /files/etc/hosts/3/canonical mongodbserver",
  ],
}

service { 'mongod':
  ensure  => running,
  require => [ File[ '/etc/mongod.conf' ], Package [ 'mongodb-org' ] ],
}
